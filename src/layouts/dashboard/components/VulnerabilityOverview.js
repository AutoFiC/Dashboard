import React from "react";
import { Card, Grid } from "@mui/material";
import Chart from "react-apexcharts";
import { FaBug } from "react-icons/fa";

import VuiBox from "components/VuiBox";
import VuiTypography from "components/VuiTypography";
import colors from "assets/theme/base/colors";
import linearGradient from "assets/theme/functions/linearGradient";

function VulnerabilityOverview({ stats }) {
  if (!stats || !stats.byClass || stats.byClass.length === 0) return null;

  const { top3, byClass } = stats;
  const labels = byClass.map((v) => v.type);
  const series = byClass.map((v) => v.count);
  const totalCount = series.reduce((a, b) => a + b, 0);

  const donutChartOptions = {
    chart: { type: "donut", toolbar: { show: false } },
    labels: labels,
    tooltip: {
      enabled: true,
      custom: function ({ series, seriesIndex, w }) {
        const value = series[seriesIndex];
        const label = w.globals.labels[seriesIndex];
        const total = series.reduce((a, b) => a + b, 0);
        const percent = ((value / total) * 100).toFixed(1);
        return `
          <div style="
            padding: 8px 12px;
            background: rgba(0, 0, 0, 0.85);
            color: white;
            border-radius: 6px;
            font-size: 13px;
          ">
            <strong>${label}</strong>: 
            <span style="color: #00e3ff; font-weight: bold;">
              ${value} issues (${percent}%)
            </span>
          </div>
        `;
      },
    },
    legend: { show: false },
    plotOptions: {
      pie: {
        donut: {
          size: "70%",
          labels: {
            show: true,
            name: {
              show: true,
              fontSize: "13px",
              fontWeight: 600,
              offsetY: -8,
              color: "#ffffff",
            },
            value: {
              show: true,
              fontSize: "15px",
              fontWeight: "bold",
              color: "#00e3ff",
              offsetY: 8,
              formatter: function (val) {
                const total = series.reduce((a, b) => a + b, 0);
                const percent = ((val / total) * 100).toFixed(1);
                return `${val} issues (${percent}%)`;
              },
            },
            total: {
              show: true,
              showAlways: true,
              label: "Total Vulnerabilities",
              fontSize: "13px",
              fontWeight: 500,
              color: "#ffffff",
              formatter: () => `${totalCount} issues`,
            },
          },
        },
      },
    },
    dataLabels: { enabled: false },
    stroke: { show: false },
    colors: [
      "#00c6ff", "#fbcf33", "#f53939", "#5e72e4", "#2dce89",
      "#11cdef", "#fb6340", "#8965e0", "#f5365c", "#ffa21a",
    ],
  };

  const { gradients } = colors;

  return (
    <Card
      sx={{
        overflow: "visible",
        height: "100%",
        padding: "24px",
        borderRadius: "20px",
        color: "#fff",
      }}
      style={{
        background: `${linearGradient(
          gradients.cardDark.main,
          gradients.cardDark.state,
          gradients.cardDark.deg
        )} !important`,
      }}
    >
      <VuiTypography
        variant="lg"
        fontWeight="bold"
        mb="20px"
        color="white"
        display="flex"
        alignItems="center"
        gap={1}
      >
        <FaBug />
        Vulnerability Overview
      </VuiTypography>

      <Grid container spacing={2}>
        <Grid item xs={12} md={7}>
          <Grid container spacing={1}>
            {top3.map((vuln, idx) => (
              <Grid item xs={12} key={idx}>
                <VuiBox
                  display="flex"
                  alignItems="center"
                  gap={2}
                  sx={{
                    backgroundColor: "rgba(255, 255, 255, 0.05)",
                    borderRadius: "10px",
                    padding: "12px 16px",
                  }}
                >
                  <VuiBox
                    sx={{
                      backgroundColor: "#007bff",
                      color: "#fff",
                      borderRadius: "12px",
                      minWidth: "30px",
                      height: "30px",
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                      fontWeight: "bold",
                      fontSize: "14px",
                    }}
                  >
                    {idx + 1}
                  </VuiBox>
                  <VuiTypography
                    variant="button"
                    fontWeight="medium"
                    sx={{ color: "#d0d0d0", wordBreak: "break-word" }}
                  >
                    {vuln}
                  </VuiTypography>
                </VuiBox>
              </Grid>
            ))}
          </Grid>
        </Grid>

        <Grid item xs={12} md={5} sx={{ overflow: "visible" }}>
          <Chart
            options={donutChartOptions}
            series={series}
            type="donut"
            height="240"
          />
        </Grid>
      </Grid>
    </Card>
  );
}

export default VulnerabilityOverview;
