# Simple workflow for deploying static content to GitHub Pages
name: Deploy Dashboard pages

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *' # 3시간 마다 실행

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Generate dashboard_data.json
        env:
          LOG_API_URL: ${{ secrets.LOG_API_URL }}
        run: |
          python public/log_to_dashboard.py
          
      - name: Build project
        run: npm run build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
